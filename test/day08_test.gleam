import day08
import gleam/set
import gleeunit
import gleeunit/should
import point

pub fn main() {
  gleeunit.main()
}

const example = "............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............"

pub fn antinodes_by_pair_test() {
  // ..........
  // ...#......
  // ..........
  // ....a.....
  // ..........
  // .....a....
  // ..........
  // ......#...
  // ..........
  // ..........
  day08.antinodes_by_pair(#(point.Point(4, 3), point.Point(5, 5)))
  |> should.equal([point.Point(3, 1), point.Point(6, 7)])
}

pub fn antinodes_by_letter_test() {
  // ..........
  // ...#......
  // #.........
  // ....a.....
  // ........a.
  // .....a....
  // ..#.......
  // ......#...
  // ..........
  // ..........
  day08.antinodes_by_letter(
    [point.Point(4, 3), point.Point(5, 5), point.Point(8, 4)],
    set.new(),
    day08.antinodes_by_pair,
  )
  |> should.equal(
    [
      point.Point(0, 2),
      point.Point(2, 6),
      point.Point(3, 1),
      point.Point(6, 7),
      // these 2 are off the map
      point.Point(11, 3),
      point.Point(12, 5),
    ]
    |> set.from_list,
  )
}

pub fn part1_test() {
  day08.part1(example)
  |> should.equal(14)
}

pub fn part2_test() {
  day08.part2(example)
  |> should.equal(34)
}
